<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="eventVector"/>
    </start>
    <define name="eventVector">
        <choice>
            <xsd:annotation>
                <summary>Tactics for selecting channel groups for events</summary>
                <velocity>#waveformVectorArmPage()</velocity>
            </xsd:annotation>
            <ref name="ANDEventChannelWrapper"/>
            <ref name="OREventChannelWrapper"/>
            <ref name="eventVectorAND"/>
            <ref name="eventVectorOR"/>
            <ref name="eventVectorNOT"/>
            <ref name="PASS"/>
            <ref name="external"/>
        </choice>
    </define>
    <define name="ANDEventChannelWrapper">
        <element name="ANDEventChannelWrapper">
            <xsd:annotation>
                <summary>Allows an event channel subsetter to be embedded within a event vector subsetter</summary>
                <description>Allows an event channel subsetter to be embedded within a event channelgroup subsetter. The
                    result is the AND of result of all the individual channels. The is most often used within the motion
                    vector arm.</description>
                <example>
                    <ANDEventChannelWrapper>
                        <embeddedChannel>
                            <bandCode>B</bandCode>
                        </embeddedChannel>
                    </ANDEventChannelWrapper>
                </example>
            </xsd:annotation>
            <externalRef href="eventChannel.rng"/>
        </element>
    </define>
    <define name="OREventChannelWrapper">
        <element name="OREventChannelWrapper">
            <xsd:annotation>
                <summary>Allows an event channel subsetter to be embedded within a event vector subsetter</summary>
                <description>Allows an event channel subsetter to be embedded within a event channelgroup subsetter. The
                    result is the OR of result of all the individual channels. The is most often used within the motion
                    vector arm.</description>
                <example>
                    <OREventChannelWrapper>
                        <embeddedChannel>
                            <bandCode>B</bandCode>
                        </embeddedChannel>
                    </OREventChannelWrapper>
                </example>
            </xsd:annotation>
            <externalRef href="eventChannel.rng"/>
        </element>
    </define>
    <define name="eventVectorAND">
        <element name="eventVectorAND">
            <xsd:annotation>
                <summary>Matches all included EventVector subsetters</summary>
                <description>The output is the logical AND of the outputs of all included EventVector subsetters. This
                    means that it will evaluate to true only if all the included subsetters evaluate to true. The
                    subsetters after the first false outputted are not evaluated.</description>
            </xsd:annotation>
            <oneOrMore>
                <ref name="eventVector"/>
            </oneOrMore>
        </element>
    </define>
    <define name="eventVectorOR">
        <element name="eventVectorOR">
            <xsd:annotation>
                <summary>Matches at least one of included EventVector subsetters</summary>
                <description>The output is the logical OR of the outputs of all included EventVector subsetters. This
                    means that at least one included subsetter must evaluate to true for this subsetter to evaluate to
                    true. The subsetters after the first true outputted are not evaluated.</description>
            </xsd:annotation>
            <oneOrMore>
                <ref name="eventVector"/>
            </oneOrMore>
        </element>
    </define>
    <define name="eventVectorNOT">
        <element name="eventVectorNOT">
            <xsd:annotation>
                <summary>Matches the negated output of the included EventVector subsetter</summary>
                <description>The output is the logical NOT of the output of the included subsetter. This means that the
                    included subsetter must evaluate to false for this subsetter to evaluate to true, and vice versa.</description>
            </xsd:annotation>
            <ref name="eventVector"/>
        </element>
    </define>
    <define name="PASS">
        <element name="passEventChannel">
            <xsd:annotation>
                <summary>Accepts any channel group</summary>
                <description>This is a simple subsetter that always returns true, which is particularly useful for testing.</description>
            </xsd:annotation>
            <zeroOrMore>
                <ref name="eventVector"/>
            </zeroOrMore>
        </element>
    </define>
    <define name="external">
        <element name="externalEventVectorSubsetter">
            <xsd:annotation>
                <summary>Use an EventVector subsetter external to SOD</summary>
                <description>$externalEventVectorSubsetterInfo.getRelaxHTML('../../../')</description>
                <example>
                    <externalEventVectorSubsetter>
                        <classname>edu.somewhere.seis.sodExt.subsetter.waveformVector.MyEventVectorSubsetter</classname>
                    </externalEventVectorSubsetter>
                </example>
            </xsd:annotation>
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
