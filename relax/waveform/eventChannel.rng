<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="eventChannel"/>
    </start>
    <define name="eventChannel">
        <choice>
            <xsd:annotation>
                <summary>Tactics for selecting combinations of channels and events</summary>
                <velocity>#waveformArmPage()</velocity>
            </xsd:annotation>
            <ref name="embeddedEventStation"/>
            <ref name="embeddedChannel"/>
            <ref name="eventChannelAND"/>
            <ref name="eventChannelOR"/>
            <ref name="eventChannelNOT"/>
            <ref name="PASS"/>
            <ref name="external"/>
        </choice>
    </define>
    <define name="embeddedEventStation">
        <element name="embeddedEventStation">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Allows an event station subsetter to be embedded within a event
                        channel subsetter</summary>
                    <description>Allows an event station subsetter to be embedded within a event
                        channel subsetter. The is most often used within an EventChannel logical
                        subsetter.</description>
                    <example>
                        <embeddedEventStation>
                            <distanceRange>
                                <unit>DEGREE</unit>
                                <min>40</min>
                            </distanceRange>
                        </embeddedEventStation>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <externalRef href="eventStation.rng"/>
        </element>
    </define>
    <define name="embeddedChannel">
        <element name="embeddedChannel">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Allows a Channel subsetter to be embedded within an EventChannel</summary>
                    <description>Allows a Channel subsetter to be embedded within an EventChannel.
                        This is most often used within a EventChannel logical.</description>
                    <example>
                        <embeddedChannel>
                            <sampling>
                                <min>1</min>
                                <max>40</max>
                                <interval>
                                    <unit>SECOND</unit>
                                    <value>1</value>
                                </interval>
                            </sampling>
                        </embeddedChannel>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <externalRef href="../network/channel.rng"/>
        </element>
    </define>
    <define name="eventChannelAND">
        <element name="eventChannelAND">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches all enclosed EventChannel subsetters</summary>
                    <description>The output is the logical AND of the outputs of all included EventChannel subsetters. This
                        means that it will evaluate to true only if all the enclosed EventChannel subsetters evaluate to
                        true. The subsetters after the first false outputted are not evaluated.</description>
                    <example>
                        <eventChannelAND>
                            <embeddedEventStation>
                                <distanceRange>
                                    <unit>DEGREE</unit>
                                    <min>40</min>
                                </distanceRange>
                            </embeddedEventStation>
                            <embeddedChannel>
                                <bandCode>B</bandCode>
                            </embeddedChannel>
                        </eventChannelAND>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="eventChannel"/>
            </oneOrMore>
        </element>
    </define>
    <define name="eventChannelOR">
        <element name="eventChannelOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches at least one enclosed EventChannel subsetter</summary>
                    <description>The output is the logical OR of the outputs of all included EventChannel subsetters. This
                        means that it will evaluate to true if at least one of the enclosed EventChannel subsetters evaluate
                        to true. The subsetters after the first true outputted are not evaluated.</description>
                    <example>
                        <eventChannelOR>
                            <embeddedEventStation>
                                <distanceRange>
                                    <unit>DEGREE</unit>
                                    <min>40</min>
                                </distanceRange>
                            </embeddedEventStation>
                            <embeddedChannel>
                                <bandCode>B</bandCode>
                            </embeddedChannel>
                        </eventChannelOR>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="eventChannel"/>
            </oneOrMore>
        </element>
    </define>
    <define name="eventChannelNOT">
        <element name="eventChannelNOT">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the negated output of the enclosed EventChannel subsetter</summary>
                    <description>The output is the logical NOT of the output of the enclosed EventChannel subsetter. This
                        means that it will evaluate to false if the enclosed EventChannel subsetter evaluates to true, and
                        vice versa.</description>
                    <example>
                        <eventChannelNOT>
                            <embeddedEventStation>
                                <distanceRange>
                                    <unit>DEGREE</unit>
                                    <min>40</min>
                                </distanceRange>
                            </embeddedEventStation>
                        </eventChannelNOT>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="eventChannel"/>
        </element>
    </define>
    <define name="PASS">
        <element name="passEventChannel">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Accepts any event-channel pair</summary>
                    <description>This is a simple subsetter that always returns true for any event-channel pair, which is useful
                        for testing purposes.</description>
                    <example>
                        <passEventChannel/>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <zeroOrMore>
                <ref name="eventChannel"/>
            </zeroOrMore>
        </element>
    </define>
    <define name="external">
        <element name="externalEventChannelSubsetter">
            <xsd:annotation>
                <summary>Use an EventChannel subsetter external to SOD</summary>
                <description>Attempts to load the class named by classname, and if it implements EventChannelSubsetter, SOD
                    calls accept() on the class for every event-channel pair.</description>
                <example>
                    <externalEventChannelSubsetter>
                        <classname>edu.somewhere.seis.sodExt.subsetter.eventChannel.MyEventChannelSubsetter</classname>
                    </externalEventChannelSubsetter>
                </example>
            </xsd:annotation>
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
