<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
        xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
        <include href="../base/include/quantity.rng"/>
        <start>
                <ref name="availableData"/>
        </start>
        <include href="../base/include/eventLabel.rng"/>
        <define name="availableData">
                <choice>
                        <ref name="postEventWait"/>
                        <ref name="noGaps"/>
                        <ref name="fullCoverage"/>
                        <ref name="someCoverage"/>
                        <ref name="availableDataAND"/>
                        <ref name="availableDataOR"/>
                        <ref name="availableDataXOR"/>
                        <ref name="availableDataNOT"/>
                        <ref name="PASS"/>
                </choice>
        </define>
        <define name="availableDataAND">
                <xsd:annotation>
                        <xsd:documentation xml:lang="en">
                                <summary> Logical AND between AvailableData subsetters. </summary>
                                <description> The output is the logical AND of the outputs of all
                                        included subsetters. The subsetters after the first false
                                        outputed are not evaluated. </description>
                                <example>
                                        <availableDataAND>
                                                <noGaps/>
                                                <fullCoverage/>
                                        </availableDataAND>
                                </example>
                        </xsd:documentation>
                </xsd:annotation>
                <element name="availableDataAND">
                        <oneOrMore>
                                <ref name="availableData"/>
                        </oneOrMore>
                </element>
        </define>
        <define name="availableDataOR">
                <xsd:annotation>
                        <xsd:documentation xml:lang="en">
                                <summary> Logical OR between AvailableData subsetters. </summary>
                                <description> The output is the logical OR of the outputs of all
                                        included subsetters. The subsetters after the first true
                                        outputed are not evaluated. </description>
                                <example>
                                        <availableDataOR>
                                                <noGaps/>
                                                <fullCoverage/>
                                        </availableDataOR>
                                </example>
                        </xsd:documentation>
                </xsd:annotation>
                <element name="availableDataOR">
                        <oneOrMore>
                                <ref name="availableData"/>
                        </oneOrMore>
                </element>
        </define>
        <define name="availableDataXOR">
                <xsd:annotation>
                        <xsd:documentation xml:lang="en">
                                <summary> Logical XOR between AvailableData subsetters. </summary>
                                <description> The output is the logical XOR of the outputs of all
                                        included subsetters. </description>
                                <example>
                                        <availableDataXOR>
                                                <noGaps/>
                                                <fullCoverage/>
                                        </availableDataXOR>
                                </example>
                        </xsd:documentation>
                </xsd:annotation>
                <element name="availableDataXOR">
                        <ref name="availableData"/>
                        <ref name="availableData"/>
                </element>
        </define>
        <define name="availableDataNOT">
                <xsd:annotation>
                        <xsd:documentation xml:lang="en">
                                <summary> Logical NOT of an AvailableData subsetter. </summary>
                                <description> The output is the logical NOT of the output of the
                                        included subsetters. </description>
                                <example>
                                        <availableDataNOT>
                                                <noGaps/>
                                        </availableDataNOT>
                                </example>
                        </xsd:documentation>
                </xsd:annotation>
                <element name="availableDataNOT">
                        <ref name="availableData"/>
                </element>
        </define>
        <define name="noGaps">
                <element name="noGaps">
                        <empty/>
                </element>
        </define>
        <define name="fullCoverage">
                <element name="fullCoverage">
                        <empty/>
                </element>
        </define>
        <define name="someCoverage">
                <element name="someCoverage">
                        <empty/>
                </element>
        </define>
        <define name="postEventWait">
                <element name="postEventWait">
                        <ref name="time"/>
                </element>
        </define>
        <define name="PASS">
                <xsd:annotation>
                        <xsd:documentation xml:lang="en">
                                <summary> Always returns true. </summary>
                                <description> Simple subsetter that always returns true, useful for testing. </description>
                                <example>
                                        <passAvailableData/>
                                </example>
                        </xsd:documentation>
                </xsd:annotation>
                <element name="passAvailableData">
                        <zeroOrMore>
                                <ref name="availableData"/>
                        </zeroOrMore>
                </element>
        </define>
</grammar>
