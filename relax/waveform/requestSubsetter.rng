<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="request"/>
    </start>
    <include href="../base/include/eventLabel.rng"/>
    <define name="request">
        <choice>
            <ref name="requestAND"/>
            <ref name="requestOR"/>
            <ref name="requestXOR"/>
            <ref name="requestNOT"/>
            <ref name="requestPrint"/>
            <ref name="breqFastRequest"/>
            <ref name="PASS"/>
            <ref name="external"/>
        </choice>
    </define>
    <define name="requestAND">
        <element name="requestAND">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Logical AND between Request subsetters. </summary>
                    <description> The output is the logical AND of the outputs of all included
                        subsetters. The subsetters after the first false outputed are not evaluated. </description>
                    <example>
                        <requestAND>
                            <requestPrint/>
                            <externalRequest>
                                <classname>edu.somewhere.seis.sodExt.subsetters.SampleExternalRequestSubsetter</classname>
                                <someTag/>
                                <someOtherTag/>
                            </externalRequest>
                        </requestAND>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="request"/>
            </oneOrMore>
        </element>
    </define>
    <define name="requestOR">
        <element name="requestOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Logical OR between Request subsetters. </summary>
                    <description> The output is the logical OR of the outputs of all included
                        subsetters. The subsetters after the first true outputed are not evaluated. </description>
                    <example>
                        <requestOR>
                            <requestPrint/>
                            <passRequest/>
                        </requestOR>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="request"/>
            </oneOrMore>
        </element>
    </define>
    <define name="requestXOR">
        <element name="requestXOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Logical XOR between Request subsetters. </summary>
                    <description> The output is the logical XOR of the outputs of all included
                        subsetters. </description>
                    <example>
                        <requestXOR>
                            <requestPrint/>
                            <externalRequest>
                                <classname>edu.somewhere.seis.sodExt.subsetters.SampleExternalRequestSubsetter</classname>
                            </externalRequest>
                        </requestXOR>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="request"/>
            <ref name="request"/>
        </element>
    </define>
    <define name="requestNOT">
        <element name="requestNOT">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Logical NOT of an Request subsetter. </summary>
                    <description> The output is the logical NOT of the output of the included
                        subsetters. </description>
                    <example>
                        <requestNOT>
                            <requestPrint/>
                        </requestNOT>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="request"/>
        </element>
    </define>
    <define name="requestPrint">
        <element name="requestPrint">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Prints the Request and returns true. </summary>
                    <description> Mainly useful for debugging, prints out the request. </description>
                    <example>
                        <requestPrint/>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <empty/>
        </element>
    </define>
    <define name="breqFastRequest">
        <element name="breqFastRequest">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Creates a breqfast request and saves it to a file and returns true. </summary>
                    <description> Mainly useful for accessing data that is not available via
                        Fissures/DHI, such as restricted PASSCAL datasets or data from datacenters
                        that have a breqfast system but not DHI seismogram servers. Of course the
                        network information must be available to SOD. As this subsetter always
                        returns true, processing will continue past this point. In most cases, the
                        whole reason to generate breqfast requests is that it is the only way to get
                        the data, and so there is not much point in proceeding down the waveform
                        arm. So you will generally want to wrap the breqFastRequest in a
                        requestNOT so that the return value is false. This will
                        allow SOD to proceed to the next piece of work and avoid the wasted time in
                        going to the server to get data. </description>
                    <example>
                        <breqFastRequest>
                            <dataDirectory>RUSH_breqfast</dataDirectory>
                            <label>
                                <originTime>yyyy_DDD_HH_mm_ss</originTime>
                            </label>
                            <name>Jenny Seismologist</name>
                            <inst>Univ. of Example</inst>
                            <mail>Dept. of Seismology., Main St. MyTown AA, USA</mail>
                            <email>joe@seis.example.edu</email>
                            <phone>555-867-5309</phone>
                            <fax>none</fax>
                            <media>Electronic</media>
                            <altmedia1>Electronic</altmedia1>
                            <altmedia2>Electronic</altmedia2>
                            <quality>b</quality>
                        </breqFastRequest>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <element name="dataDirectory">
                <data type="string"/>
            </element>
            <optional>
                <element name="label">
                    <ref name="eventLabel"/>
                </element>
            </optional>
            <element name="name">
                <data type="string"/>
            </element>
            <element name="inst">
                <data type="string"/>
            </element>
            <element name="mail">
                <data type="string"/>
            </element>
            <element name="email">
                <data type="string"/>
            </element>
            <element name="phone">
                <data type="string"/>
            </element>
            <element name="fax">
                <data type="string"/>
            </element>
            <element name="media">
                <data type="string"/>
            </element>
            <element name="altmedia1">
                <data type="string"/>
            </element>
            <element name="altmedia2">
                <data type="string"/>
            </element>
            <element name="quality">
                <data type="string"/>
            </element>
        </element>
    </define>
    <define name="PASS">
        <element name="passRequest">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Always returns true. </summary>
                    <description> Simple subsetter that always returns true, useful for testing. </description>
                    <example>
                        <passRequest/>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <zeroOrMore>
                <ref name="request"/>
            </zeroOrMore>
        </element>
    </define>
    <define name="external">
        <element name="externalRequest">
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
