<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <start combine="choice">
        <notAllowed/>
    </start>
    <include href="taup.rng"/>
    <include href="units.rng"/>
    <define name="recordSectionDisplayContents">
        <ref name="defineAndReference"/>
        <element name="type">
            <value>recordSection</value>
        </element>
        <optional>
            <element name="swapAxes">
                <empty/>
            </element>
        </optional>
        <optional>
            <ref name="dontDrawNamed"/>
        </optional>
        <optional>
            <ref name="flagColors"/>
        </optional>
        <optional>
            <ref name="traceColors"/>
        </optional>
        <optional>
            <ref name="borderBackground"/>
        </optional>
        <optional>
            <ref name="borderColor"/>
        </optional>
        <zeroOrMore>
            <ref name="border"/>
        </zeroOrMore>
        <optional>
            <ref name="timeConfig"/>
        </optional>
        <optional>
            <ref name="ampConfig"/>
        </optional>
    </define>
    <define name="basicSeismogramDisplayContents">
        <ref name="defineAndReference"/>
        <optional>
            <element name="type">
                <value>basic</value>
            </element>
        </optional>
        <optional>
            <ref name="dontDrawNamed"/>
        </optional>
        <optional>
            <ref name="flagColors"/>
        </optional>
        <optional>
            <ref name="traceColors"/>
        </optional>
        <optional>
            <ref name="borderBackground"/>
        </optional>
        <optional>
            <ref name="borderColor"/>
        </optional>
        <zeroOrMore>
            <ref name="border"/>
        </zeroOrMore>
        <optional>
            <ref name="timeConfig"/>
        </optional>
        <optional>
            <ref name="ampConfig"/>
        </optional>
        <optional>
            <ref name="outlineColor"/>
        </optional>
    </define>
    <define name="displaySpecificElements">
        <notAllowed/>
    </define>
    <define name="dontDrawNamed">
        <element name="dontDrawNamedDrawableNames">
            <xsd:annotation>
                <summary>Turns off the names of seismograms and other named drawables in the display</summary>
            </xsd:annotation>
            <empty/>
        </element>
    </define>
    <define name="flagColors">
        <element name="flagColors">
            <xsd:annotation>
                <summary>A list of colors to use for flags added to the display. The first flag gets the first color,
                    the second flag gets the second color and so on and so forth.</summary>
            </xsd:annotation>
            <ref name="defineAndReference"/>
            <oneOrMore>
                <ref name="color"/>
            </oneOrMore>
        </element>
    </define>
    <define name="traceColors">
        <element name="traceColors">
            <xsd:annotation>
                <summary>A list of colors to use for seismograms added to the display. The first trace gets the first
                    color, the second trace gets the second color and so on and so forth.</summary>
            </xsd:annotation>
            <ref name="defineAndReference"/>
            <oneOrMore>
                <ref name="color"/>
            </oneOrMore>
        </element>
    </define>
    <define name="borderBackground">
        <element name="borderBackground">
            <xsd:annotation>
                <summary>The color of the background of all borders in the display</summary>
            </xsd:annotation>
            <ref name="colorContents"/>
        </element>
    </define>
    <define name="borderColor">
        <element name="borderColor">
            <xsd:annotation>
                <summary>The color of the ticks and text on the borders</summary>
            </xsd:annotation>
            <ref name="colorContents"/>
        </element>
    </define>
    <define name="outlineColor">
        <element name="outlineColor">
            <xsd:annotation>
                <summary>The color of the outline around the display</summary>
            </xsd:annotation>
            <ref name="colorContents"/>
        </element>
    </define>
    <define name="color">
        <element name="color">
            <ref name="colorContents"/>
        </element>
    </define>
    <define name="colorContents">
        <ref name="defineAndReference"/>
        <optional>
            <element name="red">
                <data type="integer"/>
            </element>
        </optional>
        <optional>
            <element name="green">
                <data type="integer"/>
            </element>
        </optional>
        <optional>
            <element name="blue">
                <data type="integer"/>
            </element>
        </optional>
        <optional>
            <element name="alpha">
                <data type="integer"/>
            </element>
        </optional>
    </define>
    <define name="defineAndReference">
        <optional>
            <choice>
                <attribute name="id"/>
                <attribute name="overwritingId"/>
            </choice>
        </optional>
        <optional>
            <attribute name="base"/>
        </optional>
    </define>
    <define name="border">
        <element name="border">
            <ref name="borderContents"/>
        </element>
    </define>
    <define name="titleBorder">
        <element name="titleBorder">
            <ref name="borderContents"/>
        </element>
    </define>
    <define name="borderContents">
        <ref name="defineAndReference"/>
        <element name="type">
            <choice>
                <value>title</value>
                <value>dist</value>
                <value>amp</value>
                <value>time</value>
                <value>triangle</value>
                <value>elapsed</value>
            </choice>
        </element>
        <element name="position">
            <choice>
                <value>bottom</value>
                <value>top</value>
                <value>left</value>
                <value>right</value>
                <value>bottom left</value>
                <value>bottom right</value>
                <value>top left</value>
                <value>top right</value>
            </choice>
        </element>
        <optional>
            <element name="titleCentered">
                <choice>
                    <value>true</value>
                    <value>false</value>
                </choice>
            </element>
        </optional>
        <optional>
            <element name="triangleColors">
                <oneOrMore>
                    <element name="color">
                        <ref name="colorContents"/>
                    </element>
                </oneOrMore>
            </element>
        </optional>
        <optional>
            <element name="clipTicks">
                <element name="min">
                    <data type="double"/>
                </element>
                <element name="max">
                    <data type="double"/>
                </element>
            </element>
        </optional>
        <optional>
            <element name="titleFont">
                <ref name="fontContents"/>
            </element>
        </optional>
        <optional>
            <element name="titleColor">
                <ref name="colorContents"/>
            </element>
        </optional>
        <optional>
            <element name="background">
                <ref name="colorContents"/>
            </element>
        </optional>
        <zeroOrMore>
            <element name="title">
                <ref name="defineAndReference"/>
                <element name="text">
                    <data type="string"/>
                </element>
                <optional>
                    <element name="font">
                        <ref name="fontContents"/>
                    </element>
                </optional>
                <optional>
                    <element name="titleColor">
                        <ref name="colorContents"/>
                    </element>
                </optional>
            </element>
        </zeroOrMore>
    </define>
    <define name="fontContents">
        <ref name="defineAndReference"/>
        <optional>
            <element name="size">
                <data type="integer"/>
            </element>
        </optional>
        <optional>
            <element name="name">
                <data type="string"/>
            </element>
        </optional>
        <optional>
            <element name="style">
                <choice>
                    <value>plain</value>
                    <value>bold</value>
                    <value>italic</value>
                </choice>
            </element>
        </optional>
    </define>
    <define name="timeConfig">
        <element name="timeConfig">
            <ref name="defineAndReference"/>
            <element name="type">
                <choice>
                    <value>basic</value>
                    <value>relative</value>
                    <value>originAligned</value>
                    <value>phaseAligned</value>
                    <value>autoAdvance</value>
                </choice>
            </element>
            <optional>
                <ref name="timeConfig"/>
            </optional>
            <optional>
                <element name="advanceInterval">
                    <ref name="timeUnit"/>
                    <element name="value">
                        <data type="double"/>
                    </element>
                </element>
            </optional>
            <optional>
                <element name="advancesPerSecond">
                    <data type="float"/>
                </element>
            </optional>
            <optional>
                <element name="phaseName">
                    <ref name="phaseName"/>
                </element>
            </optional>
        </element>
    </define>
    <define name="ampConfig">
        <element name="ampConfig">
            <ref name="ampConfigContents"/>
        </element>
    </define>
    <define name="globalizedAmpConfig">
        <element name="globalizedAmpConfig">
            <ref name="ampConfigContents"/>
        </element>
    </define>
    <define name="ampConfigContents">
        <ref name="defineAndReference"/>
        <element name="type">
            <choice>
                <value>basic</value>
                <value>rmean</value>
                <value>individual</value>
            </choice>
        </element>
        <optional>
            <ref name="ampConfig"/>
        </optional>
    </define>
</grammar>
