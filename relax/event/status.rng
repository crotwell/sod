<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <start>
        <ref name="status"/>
    </start>
    <define name="status">
        <choice>
            <xsd:annotation>
                <summary>Outputs information about events and their status</summary>
                <description>Inserting these items in the eventArm outputs information about events'
                    status in the event arm.</description>
            </xsd:annotation>
            <ref name="eventStatusTemplate"/>
            <ref name="externalEventStatus"/>
            <ref name="mapEventStatus"/>
        </choice>
    </define>
    <define name="mapEventStatus">
        <element name="mapEventStatus">
            <xsd:annotation>
                <summary>Writes maps with all events on them to a specified location</summary>
                <description>Writes maps with all events on them to the file specified in the
                    outputLoc element. The output location is relative to statusBase in the properties.</description>
                <example>
                    <mapEventStatus>
                        <outputLoc>events/eventMap.png</outputLoc>
                    </mapEventStatus>
                </example>
            </xsd:annotation>
            <element name="outputLoc">
                <text/>
            </element>
        </element>
    </define>
    <define name="eventStatusTemplate">
        <element name="eventStatusTemplate">
            <xsd:annotation>
                <summary>Writes html pages and maps for events</summary>
                <description>Writes html pages and maps for events based on the template in the
                    template element relative to statusBase in properties. The template location in
                    the example is built into SOD, so if you don't want to write a template use it.</description>
                <example>
                    <eventStatusTemplate>
                        <template>jar:edu/sc/seis/sod/data/templates/eventArm/eventStatus.xml</template>
                    </eventStatusTemplate>
                </example>
            </xsd:annotation>
            <element name="template">
                <data type="string"/>
            </element>
        </element>
    </define>
    <define name="externalEventStatus">
        <element name="externalEventMonitor">
            <xsd:annotation>
                <summary>Use an Origin subsetter external to SOD</summary>
                <description>Attempts to load the class named by classname, and if it implements
                    EventMonitor, SOD calls setArmStatus() and change() on the class for every event.</description>
                <example>
                    <externalEventMonitor>
                        <classname>edu.somewhere.seis.sodExt.status.event.MyEventMonitor</classname>
                    </externalEventMonitor>
                </example>
            </xsd:annotation>
            <element name="classname">
                <data type="string"/>
            </element>
            <zeroOrMore>
                <externalRef href="../base/externalRef/anyXML.rng"/>
            </zeroOrMore>
        </element>
    </define>
</grammar>
