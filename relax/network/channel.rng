<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="channel"/>
    </start>
    <include href="../base/include/timeRange.rng"/>
    <include href="../base/include/quantity.rng"/>
    <define name="channel">
        <choice>
            <xsd:annotation>
                <summary>Tactics for selecting channels</summary>
                <description>This collects all of the subsetters that make decisions on the contents
                    of a channel.</description>
            </xsd:annotation>
            <ref name="channelCode"/>
            <ref name="bandCode"/>
            <ref name="gainCode"/>
            <ref name="orientationCode"/>
            <ref name="sampling"/>
            <ref name="effectiveTimeOverlap"/>
            <ref name="orientationRange"/>
            <ref name="orientationAzimuthRange"/>
            <ref name="orientationDipRange"/>
            <ref name="AND"/>
            <ref name="OR"/>
            <ref name="XOR"/>
            <ref name="NOT"/>
            <ref name="PASS"/>
            <ref name="externalChannelSubsetter"/>
        </choice>
    </define>
    <define name="channelCodeChar">
        <data type="string">
            <param name="pattern">[A-Z0-9]{1}</param>
        </data>
    </define>
    <define name="channelCode">
        <element name="channelCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the entire channel code</summary>
                    <description>Matches a channel code, such as BHZ. See the SEED manual for the
                        list of available code letters.</description>
                </xsd:documentation>
            </xsd:annotation>
            <data type="string">
                <xsd:annotation>
                    <example>BHZ</example>
                </xsd:annotation>
                <param name="pattern">[A-Z0-9]{3}</param>
            </data>
        </element>
    </define>
    <define name="bandCode">
        <element name="bandCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches a band code in a channel code</summary>
                    <description>Matches a band code in a channel code, such as B for broadband and
                        L for long period. See the SEED manual for the list of available code letters.</description>
                    <example>
                        <bandCode>B</bandCode>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="channelCodeChar"/>
        </element>
    </define>
    <define name="gainCode">
        <element name="gainCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches a gain code in a channel code</summary>
                    <description>Matches a gain code in a channel code, such as H for high gain and
                        L for low gain. See the SEED manual for the list of available code letters.</description>
                    <example>
                        <gainCode>H</gainCode>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="channelCodeChar"/>
        </element>
    </define>
    <define name="orientationCode">
        <element name="orientationCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches a orientation code in a channel code</summary>
                    <description>Matches a orientation code in a channel code, such as Z for
                        vertical and N for north. See the SEED manual for the list of available code letters.</description>
                    <example>
                        <orientationCode>Z</orientationCode>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="channelCodeChar"/>
        </element>
    </define>
    <define name="AND">
        <element name="channelAND">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Logical AND between channel subsetters</summary>
                    <description>The output is the logical AND of the outputs of all included
                        subsetters. The subsetters after the first false outputed are not evaluated.</description>
                    <example>
                        <channelAND>
                            <channelEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </channelEffectiveTimeOverlap>
                            <sampling>
                                <min>1</min>
                                <max>40</max>
                                <interval>
                                    <unit>SECOND</unit>
                                    <value>1</value>
                                </interval>
                            </sampling>
                        </channelAND>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="channel"/>
            </oneOrMore>
        </element>
    </define>
    <define name="OR">
        <element name="channelOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Logical OR between channel subsetters</summary>
                    <description>The output is the logical OR of the outputs of all included
                        subsetters. If the first subsetters returns true then the second is not evaluated.</description>
                    <example>
                        <channelOR>
                            <channelEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </channelEffectiveTimeOverlap>
                            <sampling>
                                <min>1</min>
                                <max>40</max>
                                <interval>
                                    <unit>SECOND</unit>
                                    <value>1</value>
                                </interval>
                            </sampling>
                        </channelOR>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="channel"/>
            </oneOrMore>
        </element>
    </define>
    <define name="XOR">
        <element name="channelXOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Logical XOR between channel subsetters</summary>
                    <description>The output is the logical XOR of the outputs of all included subsetters.</description>
                    <example>
                        <channelXOR>
                            <channelEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </channelEffectiveTimeOverlap>
                            <sampling>
                                <min>1</min>
                                <max>40</max>
                                <interval>
                                    <unit>SECOND</unit>
                                    <value>1</value>
                                </interval>
                            </sampling>
                        </channelXOR>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="channel"/>
            <ref name="channel"/>
        </element>
    </define>
    <define name="NOT">
        <element name="channelNOT">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Logical NOT of an channel subsetter</summary>
                    <description>The output is the logical NOT of the output of the included subsetter.</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="channel"/>
        </element>
    </define>
    <define name="sampling">
        <element name="sampling">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches if the sampling rate of the channel is within the range</summary>
                    <description>Matches if the sampling rate of the channel is within the range.
                        Both the min and max are optional, although at least one must be given to
                        have any effect</description>
                    <example>
                        <sampling>
                            <min>1</min>
                            <max>40</max>
                            <interval>
                                <unit>SECOND</unit>
                                <value>1</value>
                            </interval>
                        </sampling>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <optional>
                <element name="min">
                    <data type="integer"/>
                </element>
            </optional>
            <optional>
                <element name="max">
                    <data type="integer"/>
                </element>
            </optional>
            <element name="interval">
                <ref name="time"/>
            </element>
        </element>
    </define>
    <define name="effectiveTimeOverlap">
        <element name="channelEffectiveTimeOverlap">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches if the channel effective time overlaps the given time range</summary>
                    <description>Matches if the channel effective time overlaps the given time
                        range. This is generally used to avoid processing channels that did not yet
                        exist, or were deactivated before a time range of interest.</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="timeRange"/>
        </element>
    </define>
    <define name="orientationRange">
        <element name="orientationRange">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches an orientation of a channel</summary>
                    <description>The match is true if the channel's orientation is with the offset
                        of the given azimuth and dip. The offset, as well as the azimuth and dip are
                        given in degrees.</description>
                </xsd:documentation>
            </xsd:annotation>
            <element name="azimuth">
                <data type="float">
                    <xsd:annotation>
                        <example>45</example>
                    </xsd:annotation>
                </data>
            </element>
            <element name="dip">
                <data type="float">
                    <xsd:annotation>
                        <example>0</example>
                    </xsd:annotation>
                </data>
            </element>
            <element name="maxOffset">
                <data type="float">
                    <xsd:annotation>
                        <example>20</example>
                    </xsd:annotation>
                </data>
            </element>
        </element>
    </define>
    <define name="orientationAzimuthRange">
        <element name="orientationAzimuthRange">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the azimuth of a channel</summary>
                    <description>The match is true if azimuth of the channel's orientation is with
                        the the given azimuth range. The min and max are given in degrees.</description>
                </xsd:documentation>
            </xsd:annotation>
            <element name="min">
                <data type="float">
                    <xsd:annotation>
                        <example>-10</example>
                    </xsd:annotation>
                </data>
            </element>
            <element name="max">
                <data type="float">
                    <xsd:annotation>
                        <example>10</example>
                    </xsd:annotation>
                </data>
            </element>
        </element>
    </define>
    <define name="orientationDipRange">
        <element name="orientationDipRange">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the dip of a channel</summary>
                    <description>The match is true if the dip of the channel's orientation is with
                        the the given dip range. The min and max are given in degrees.</description>
                </xsd:documentation>
            </xsd:annotation>
            <element name="min">
                <data type="float">
                    <xsd:annotation>
                        <example>-10</example>
                    </xsd:annotation>
                </data>
            </element>
            <element name="max">
                <data type="float">
                    <xsd:annotation>
                        <example>10</example>
                    </xsd:annotation>
                </data>
            </element>
        </element>
    </define>
    <define name="PASS">
        <element name="passChannel">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Always returns true</summary>
                    <description>Simple subsetter that always returns true, useful for testing.</description>
                </xsd:documentation>
            </xsd:annotation>
            <zeroOrMore>
                <ref name="channel"/>
            </zeroOrMore>
        </element>
    </define>
    <define name="externalChannelSubsetter">
        <element name="externalChannelSubsetter">
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
