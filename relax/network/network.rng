<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="network"/>
    </start>
    <include href="../base/include/timeRange.rng"/>
    <define name="network">
        <choice>
            <xsd:annotation>
                <summary>Tactics for selecting networks</summary>
                <description>All of the subsetters that make decisions on the contents of a network.</description>
            </xsd:annotation>
            <ref name="code"/>
            <ref name="name"/>
            <ref name="owner"/>
            <ref name="effectiveTimeOverlap"/>
            <ref name="AND"/>
            <ref name="OR"/>
            <ref name="NOT"/>
            <ref name="PASS"/>
            <ref name="externalNetworkSubsetter"/>
        </choice>
    </define>
    <define name="code">
        <element name="networkCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches a given network code</summary>
                    <description> A network is accepted if its network code matches the given code exactly. </description>
                </xsd:documentation>
            </xsd:annotation>
            <data type="string">
                <xsd:annotation>
                    <example>IC</example>
                </xsd:annotation>
            </data>
        </element>
    </define>
    <define name="name">
        <element name="networkName">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary> Matches the name of a network</summary>
                    <description>Compares the name of a network to the value given here and if they match exactly, the
                        network is accepted. </description>
                </xsd:documentation>
            </xsd:annotation>
            <data type="string">
                <xsd:annotation>
                    <example>Global Seismograph Network (GSN - IRIS/USGS)</example>
                </xsd:annotation>
            </data>
        </element>
    </define>
    <define name="owner">
        <element name="networkOwner">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the owner of a network</summary>
                    <description>Matches the owner of a network. This is a simple string comparison, and so care must be
                        taken for it to be useful. </description>
                </xsd:documentation>
            </xsd:annotation>
            <data type="string">
                <xsd:annotation>
                    <example>Scripps Institution of Oceanography</example>
                </xsd:annotation>
            </data>
        </element>
    </define>
    <define name="effectiveTimeOverlap">
        <element name="networkEffectiveTimeOverlap">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <description>Matches if the network exists during given time range</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="timeRange"/>
        </element>
    </define>
    <define name="AND">
        <element name="networkAND">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches all enclosed Network subsetters</summary>
                    <description>The output is the logical AND of the outputs of all included Network subsetters. This
                        means that it will evaluate to true only if all the enclosed Network subsetters evaluate to
                        true. The subsetters after the first false outputted are not evaluated.</description>
                    <example>
                        <networkAND>
                            <networkOwner>Scripps Institution of Oceanography</networkOwner>
                            <networkEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </networkEffectiveTimeOverlap>
                        </networkAND>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="network"/>
            </oneOrMore>
        </element>
    </define>
    <define name="OR">
        <element name="networkOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches at least one enclosed Network subsetter</summary>
                    <description>The output is the logical OR of the outputs of all included Network subsetters. This
                        means that it will evaluate to true if at least one of the enclosed Network subsetters evaluate
                        to true. The subsetters after the first true outputted are not evaluated.</description>
                    <example>
                        <networkOR>
                            <networkOwner>Scripps Institution of Oceanography</networkOwner>
                            <networkEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </networkEffectiveTimeOverlap>
                        </networkOR>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="network"/>
            </oneOrMore>
        </element>
    </define>
    <define name="NOT">
        <element name="networkNOT">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the negated output of the enclosed Network subsetter</summary>
                    <description>The output is the logical NOT of the output of the enclosed Network subsetter. This
                        means that it will evaluate to false if the enclosed Network subsetter evaluates to true, and
                        vice versa.</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="network"/>
        </element>
    </define>
    <define name="PASS">
        <element name="passNetwork">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Accepts any network</summary>
                    <description>This is a simple subsetter that always returns true for any network, which is useful
                        for testing purposes.</description>
                </xsd:documentation>
            </xsd:annotation>
            <zeroOrMore>
                <ref name="network"/>
            </zeroOrMore>
        </element>
    </define>
    <define name="externalNetworkSubsetter">
        <element name="externalNetworkSubsetter">
            <xsd:annotation>
                <summary>Use a Network subsetter external to SOD</summary>
                <description>Attempts to load the class named by classname, and if it implements NetworkSubsetter, SOD
                    calls accept() on the class for every network.</description>
                <example>
                    <externalNetworkSubsetter>
                        <className>edu.somewhere.seis.sodExt.subsetter.network.MyNetworkSubsetter</className>
                    </externalNetworkSubsetter>
                </example>
            </xsd:annotation>
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
