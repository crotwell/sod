<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="site"/>
    </start>
    <include href="../base/include/timeRange.rng"/>
    <include href="../base/include/range.rng"/>
    <define name="site">
        <choice>
            <xsd:annotation>
                <summary>Tactics for selecting sites</summary>
                <description>This collects all of the subsetters that make decisions on the contents
                    of a site.</description>
                <velocity>#networkArmPage()</velocity>
            </xsd:annotation>
            <ref name="code"/>
            <ref name="depthRange"/>
            <ref name="effectiveTimeOverlap"/>
            <ref name="area"/>
            <ref name="AND"/>
            <ref name="OR"/>
            <ref name="NOT"/>
            <ref name="PASS"/>
            <ref name="externalSiteSubsetter"/>
        </choice>
    </define>
    <define name="siteLogical">
        <choice>
            <ref name="code"/>
            <ref name="depthRange"/>
            <ref name="effectiveTimeOverlap"/>
            <ref name="area"/>
            <ref name="AND"/>
            <ref name="OR"/>
            <ref name="NOT"/>
            <ref name="PASS"/>
            <ref name="externalSiteSubsetter"/>
            <externalRef href="station.rng"/>
            <externalRef href="network.rng"/>
        </choice>
    </define>
    <define name="code">
        <element name="siteCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches a site code</summary>
                    <description>Matches a site code. This is a simple string match.</description>
                </xsd:documentation>
            </xsd:annotation>
            <data type="string">
                <xsd:annotation>
                    <example>00</example>
                </xsd:annotation>
            </data>
        </element>
    </define>
    <define name="depthRange">
        <element name="siteDepthRange">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches sites at a range of depths below the surface</summary>
                    <description>Matches sites at a range of depths below the surface. This might be
                        used to separate surface sites from borehole sites.</description>
                    <example>
                        <siteDepthRange>
                            <unit>METER</unit>
                            <min>100</min>
                            <max>200</max>
                        </siteDepthRange>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="range"/>
        </element>
    </define>
    <define name="effectiveTimeOverlap">
        <element name="siteEffectiveTimeOverlap">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches if the site effective time overlaps the given time range</summary>
                    <description>Matches if the site effective time overlaps the given time range.
                        This is generally used to avoid processing sites that did not yet exist, or
                        were deactivated before a time range of interest</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="timeRange"/>
        </element>
    </define>
    <define name="area">
        <element name="siteArea">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches sites that are within a given area</summary>
                </xsd:documentation>
            </xsd:annotation>
            <externalRef href="../base/externalRef/area.rng"/>
        </element>
    </define>
    <define name="AND">
        <element name="siteAND">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches all enclosed Site subsetters</summary>
                    <description>The output is the logical AND of the outputs of all included Site
                        subsetters. This means that it will evaluate to true only if all the
                        enclosed Site subsetters evaluate to true. The subsetters after the first
                        false outputted are not evaluated.</description>
                    <example>
                        <siteAND>
                            <siteDepthRange>
                                <unit>METER</unit>
                                <min>100</min>
                                <max>200</max>
                            </siteDepthRange>
                            <siteEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </siteEffectiveTimeOverlap>
                        </siteAND>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="siteLogical"/>
            </oneOrMore>
        </element>
    </define>
    <define name="OR">
        <element name="siteOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches at least one enclosed Site subsetter</summary>
                    <description>The output is the logical OR of the outputs of all included Site
                        subsetters. This means that it will evaluate to true if at least one of the
                        enclosed Site subsetters evaluate to true. The subsetters after the first
                        true outputted are not evaluated.</description>
                </xsd:documentation>
                <example>
                    <siteOR>
                        <siteDepthRange>
                            <unit>METER</unit>
                            <min>100</min>
                            <max>200</max>
                        </siteDepthRange>
                        <siteEffectiveTimeOverlap>
                            <startTime>20020701T00:00:00.001Z</startTime>
                            <endTime>20021030T00:00:00.001Z</endTime>
                        </siteEffectiveTimeOverlap>
                    </siteOR>
                </example>
            </xsd:annotation>
            <oneOrMore>
                <ref name="siteLogical"/>
            </oneOrMore>
        </element>
    </define>
    <define name="NOT">
        <element name="siteNOT">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the negated output of the enclosed Site subsetter</summary>
                    <description>The output is the logical NOT of the output of the enclosed Site
                        subsetter. This means that it will evaluate to false if the enclosed Site
                        subsetter evaluates to true, and vice versa.</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="site"/>
        </element>
    </define>
    <define name="PASS">
        <element name="passSite">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Accepts any site</summary>
                    <description>This is a simple subsetter that always returns true for any Site,
                        which is useful for testing purposes.</description>
                </xsd:documentation>
            </xsd:annotation>
            <zeroOrMore>
                <ref name="site"/>
            </zeroOrMore>
        </element>
    </define>
    <define name="externalSiteSubsetter">
        <element name="externalSiteSubsetter">
            <xsd:annotation>
                <summary>Use a site subsetter external to SOD</summary>
                <description>$externalSiteSubsetterInfo.getRelaxHTML('../../../')</description>
                <example>
                    <externalSiteSubsetter>
                        <classname>edu.somewhere.seis.sodExt.subsetter.site.MySiteSubsetter</classname>
                    </externalSiteSubsetter>
                </example>
            </xsd:annotation>
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
