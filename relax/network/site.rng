<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="site"/>
    </start>
    <include href="../base/include/timeRange.rng"/>
    <include href="../base/include/range.rng"/>
    <define name="site">
        <choice>
            <xsd:annotation>
                <summary>Tactics for selecting sites</summary>
                <description>This collects all of the subsetters that make decisions on the contents
                    of a site.</description>
                <velocity>#networkArmPage()</velocity>
            </xsd:annotation>
            <ref name="siteCode"/>
            <ref name="siteDepthRange"/>
            <ref name="siteEffectiveTimeOverlap"/>
            <ref name="siteArea"/>
            <ref name="siteBoxArea"/>
            <ref name="sitePolygonFile"/>
            <ref name="AND"/>
            <ref name="OR"/>
            <ref name="NOT"/>
            <ref name="externalSiteSubsetter"/>
        </choice>
    </define>
    <define name="siteLogical">
        <choice>
            <ref name="siteCode"/>
            <ref name="siteDepthRange"/>
            <ref name="siteEffectiveTimeOverlap"/>
            <ref name="siteArea"/>
            <ref name="siteBoxArea"/>
            <ref name="sitePolygonFile"/>
            <ref name="AND"/>
            <ref name="OR"/>
            <ref name="NOT"/>
            <ref name="externalSiteSubsetter"/>
            <externalRef href="station.rng"/>
            <externalRef href="network.rng"/>
        </choice>
    </define>
    <define name="siteCode">
        <element name="siteCode">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches a site code</summary>
                    <description>Matches a site code. This is a simple string match.</description>
                </xsd:documentation>
            </xsd:annotation>
            <data type="string">
                <xsd:annotation>
                    <example>00</example>
                </xsd:annotation>
            </data>
        </element>
    </define>
    <define name="siteDepthRange">
        <element name="siteDepthRange">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches sites at a range of depths below the surface</summary>
                    <description>Matches sites at a range of depths below the surface. This might be
                        used to separate surface sites from borehole sites.</description>
                    <example>
                        <siteDepthRange>
                            <unit>METER</unit>
                            <min>100</min>
                            <max>200</max>
                        </siteDepthRange>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="range"/>
        </element>
    </define>
    <define name="siteEffectiveTimeOverlap">
        <element name="siteEffectiveTimeOverlap">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches if the site effective time overlaps the given time range</summary>
                    <description>Matches if the site effective time overlaps the given time range.
                        This is generally used to avoid processing sites that did not yet exist, or
                        were deactivated before a time range of interest.  By default, SOD uses a siteEffectiveTimeOverlap configured with the event arm's time range.
                          If all you want to do is make sure your sites are active during 
                    your events, that's already done.</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="timeRange"/>
        </element>
    </define>
    <define name="siteArea">
        <element name="siteArea">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches sites that are within a given area</summary> 
                    <deprecated>siteArea can be replaced by a tag for the area inside of it.  
                    <a href="siteBoxArea.html">siteBoxArea</a> if it contains boxArea or <a href="sitePolygonFile.html">sitePolygonFile</a> if it contains polygonFile.</deprecated>
                </xsd:documentation>
            </xsd:annotation>
            <externalRef href="../base/externalRef/area.rng"/>
        </element>
    </define>
    <define name="siteBoxArea">
        <element name="siteBoxArea">
            <xsd:annotation>
                <summary>Accepts sites that occur within a lat lon box </summary>
                <description>Accepts sites that occur within the latitude longitude box defined
                    here</description>
            </xsd:annotation>
            <externalRef href="../base/externalRef/latitudeRange.rng"/>
            <externalRef href="../base/externalRef/longitudeRange.rng"/>
        </element>
    </define>
    <define name="sitePolygonFile">
        <element name="sitePolygonFile">
            <xsd:annotation>
                <summary>Reads in a file with lat long points and accepts any site that falls inside
                    the shape they create</summary>
                <description>Reads the file at the location given and parses out a shape based on
                    the points listed in the file. The points should be given as a longitude value, 
                    a space then a latitude value as in <a href="../../pentagon.txt">this example</a>.
                    Longitude values range from -180 to 180 and latitudes range from -90 to 90.
                    The file can contain as many points as
                    necessary to create the shape. Any point landing inside the shape is accepted.</description>
            </xsd:annotation>
            <data type="string"/>
        </element>
    </define>
    <define name="AND">
        <element name="siteAND">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches all enclosed Site subsetters</summary>
                    <description>The output is the logical AND of the outputs of all included Site
                        subsetters. This means that it will evaluate to true only if all the
                        enclosed Site subsetters evaluate to true. The subsetters after the first
                        false outputted are not evaluated.</description>
                    <example>
                        <siteAND>
                            <siteDepthRange>
                                <unit>METER</unit>
                                <min>100</min>
                                <max>200</max>
                            </siteDepthRange>
                            <siteEffectiveTimeOverlap>
                                <startTime>20020701T00:00:00.001Z</startTime>
                                <endTime>20021030T00:00:00.001Z</endTime>
                            </siteEffectiveTimeOverlap>
                        </siteAND>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <oneOrMore>
                <ref name="siteLogical"/>
            </oneOrMore>
        </element>
    </define>
    <define name="OR">
        <element name="siteOR">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches at least one enclosed Site subsetter</summary>
                    <description>The output is the logical OR of the outputs of all included Site
                        subsetters. This means that it will evaluate to true if at least one of the
                        enclosed Site subsetters evaluate to true. The subsetters after the first
                        true outputted are not evaluated.</description>
                </xsd:documentation>
                <example>
                    <siteOR>
                        <siteDepthRange>
                            <unit>METER</unit>
                            <min>100</min>
                            <max>200</max>
                        </siteDepthRange>
                        <siteEffectiveTimeOverlap>
                            <startTime>20020701T00:00:00.001Z</startTime>
                            <endTime>20021030T00:00:00.001Z</endTime>
                        </siteEffectiveTimeOverlap>
                    </siteOR>
                </example>
            </xsd:annotation>
            <oneOrMore>
                <ref name="siteLogical"/>
            </oneOrMore>
        </element>
    </define>
    <define name="NOT">
        <element name="siteNOT">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Matches the negated output of the enclosed Site subsetter</summary>
                    <description>The output is the logical NOT of the output of the enclosed Site
                        subsetter. This means that it will evaluate to false if the enclosed Site
                        subsetter evaluates to true, and vice versa.</description>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="site"/>
        </element>
    </define>
    <define name="externalSiteSubsetter">
        <element name="externalSiteSubsetter">
            <xsd:annotation>
                <summary>Use a site subsetter external to SOD</summary>
                <description>$externalSiteSubsetterInfo.getRelaxHTML('../../../')</description>
                <example>
                    <externalSiteSubsetter>
                        <classname>edu.somewhere.seis.sodExt.subsetter.site.MySiteSubsetter</classname>
                    </externalSiteSubsetter>
                </example>
            </xsd:annotation>
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
