<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <include href="../base/include/externalClass.rng"/>
    <start>
        <ref name="process"/>
    </start>
    <define name="process">
        <choice>
            <xsd:annotation>
                <summary>Items that execute on every successful channel</summary>
            </xsd:annotation>
            <ref name="printline"/>
            <ref name="external"/>
            <ref name="responseWriter"/>
        </choice>
    </define>
    <define name="responseWriter">
        <element name="responseWriter">
            <xsd:annotation>
                <summary>Prints channel responses to file</summary>
            </xsd:annotation>
            <element name="directory">
                <data type="string">
                    <xsd:annotation>
                        <example>responses</example>
                    </xsd:annotation>
                </data>
            </element>
            <element name="filePattern">
                <xsd:annotation>
                    <example><filePattern><networkCode/>-<stationCode/>-<channelCode/>.resp</filePattern></example>
                </xsd:annotation>
                <externalRef href="../base/externalRef/anyXML.rng"/>
            </element>
        </element>
    </define>
    <define name="printline">
        <element name="printlineChannelProcessor">
            <xsd:annotation>
                <summary>Prints every successful channel to the console</summary>
            </xsd:annotation>
            <empty/>
        </element>
    </define>
    <define name="external">
        <element name="externalNetworkProcess">
            <xsd:annotation>
                <summary>Use a network processor external to SOD</summary>
                <description>Attempts to load the class named by classname, and if it implements NetworkProcess, SOD calls
                    process() on the class for every event.</description>
                <example>
                    <externalEventProcess>
                        <classname>edu.somewhere.seis.sodExt.process.network.MyNetworkProcess</classname>
                    </externalEventProcess>
                </example>
            </xsd:annotation>
            <ref name="externalClass"/>
        </element>
    </define>
</grammar>
