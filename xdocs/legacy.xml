<?xml version="1.0" encoding="UTF-8"?>
<document>
        <properties>
                <title>Legacy Codes</title>
        </properties>
        <body>
                <section name="Executing Commands">
                        <p>The legacyExecute processor is capable of running existing
                        command line programs. It does this by passing the filename
                        of the seismograms saved by a earlier SaveSeismogramToFile
                        processor to a program started with Runtime.exec(). See
                        the documentation for the individual SOD tags for more
                        information.
                        </p>
                </section>
                <section name="Example">
                     <p>This snippet of xml shows the use of the legacyExecute
                     processor. Instead of doing something useful, we simply
                     use the echo program.
                     </p>
                     <pre>
                        <saveSeismogramToFile>
                            <fileType>sac</fileType>
                            <dataDirectory>POND_II</dataDirectory>
                            <eventDirLabel>
                            Event_<originTime>yyyy_DDD_HH_mm_ss</originTime>
                            </eventDirLabel>
                         </saveSeismogramToFile>
                         <legacyExecute>
                             <command>echo</command>
                         </legacyExecute>
                     </pre>
                     <p>One important thing is that the legacyExecute works in cooperation
                     with the saveSeismogramToFile processor, which handles the saving
                     of the actual seismograms. LegacyExecute just uses the filenames
                     from SaveSeismogramToFile to pass to the command. So, you must
                     have a saveSeismogramToFile somewhere before the legacyExecute.
                     SaveSeismogramToFile also has an optional prefix tag, which
                     allows more than one to be in the same SOD run without interfering.
                     If the prefix is used in the SaveSeismogramToFile, then the
                     same prefix should also be used in the legacyExecute.
                     </p>
                     <p>There is a similar processor for use in the motion vector
                     arm called channelGroupLegacyExecute. It takes the same parameters
                     and the only difference is that the file names for all three
                     components are put on the command line.
                     </p>
                </section>
                <section name="Complications">
                        <p>Unfortunately, there can be significant complications
                        with executing external applications from within SOD. That
                        is not to say that it is hard, but that there are many
                        other potential sources of trouble such as the environment,
                        locating the executable, and numerous, subtle cross
                        platform differences. However, given the large body of
                        existing processing systems, many custom written by researchers
                        for their particular needs, it would be a real shame if SOD
                        were not able to make use of these existing native codes.
                        </p>
                        <p>Perhaps the most important thing to understand is that
                        SOD cannot directly processes commands as you would when
                        typing into a shell from the keyboard. It executes a single
                        program with arguments, meaning no redirecting of output, no
                        multiple commands separated by semicolons and no piping of
                        input with HERE documents. Therefore, we highly encourage you
                        to let SOD call a separate shell script that in turn calls
                        your code. Shell scripts are familiar to most researchers
                        and provide a buffer between sod and the operating system.
                        </p>
                        <p>Input and output also causes difficulties. The legacyExecute
                        processor maps the output and error streams from the process
                        to SODs System.out and System.err, so you can see any output.
                        However, SOD makes no attempt to process this output. So, it
                        is best if the script you run sends any important information
                        to a separate log file. Expect, freely available from http://expect.nist.gov, may
                        be a better alternative to traditional shell script as it allows
                        more interactivity with the applications being called. Since
                        Expect has very effectively solved this problem and can be
                        called by SOD just as it would call any other script, we
                        hesitate to add any similar functionality directly to SOD.
                        </p>
                        <p>Lastly, the success or failure of an external process
                        is difficult for SOD to determine. It simply looks at the
                        returned exit code, and calls it an error if it is non-zero.
                        While non-zero error codes are traditional for Unix applications
                        they provide little to no debugging information to try
                        and determine the actual cause. Hence, you may need to generate
                        and save logging information internal to your script to
                        help determine when something has gone wrong and why. Also
                        if you do use a shell script, then you need to ensure that the
                        exit code of the shell script represents the success or failure
                        of the processing, as opposed to just the script running.
                        </p>
                        <p>A useful reference, although from a Java programming perspective
                        is <a href="http://www.javaworld.com/javaworld/jw-12-2000/jw-1229-traps.html"><b>When Runtime.exec() won't</b></a>.
                        </p>
                </section>
        </body>
</document>

