n<?xml version="1.0"?>
<sod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:noNamespaceSchemaLocation="sod.xsd">


<properties>
<property>
         <name>ooc.orb.service.NameService</name>
         <value>corbaloc:iiop:pooh.seis.sc.edu:4371/NameService</value>
</property>
<property>
         <name>edu.sc.seis.sod.waveformarm.threads</name>
         <value>4</value>
</property>

<!-- default is sodDatabase -->
<property>
          <name>edu.sc.seis.sod.databasename</name>
          <value>finaltest</value>
</property>

<!-- needed only for postgres,
  default is sod -->
<property>
          <name>edu.sc.seis.sod.username</name>
          <value>telukutl</value>
</property>

<!-- postgres or hsqldb or hsqldb memory only
          <value>edu.sc.seis.sod.database.PostgresDbManager</value>
          <value>edu.sc.seis.sod.database.HSqlDbManager</value>
          <value>edu.sc.seis.sod.database.HSqlMemoryDbManager</value>
-->
<property>
          <name>edu.sc.seis.sod.databasetype</name>
          <value>edu.sc.seis.sod.database.PostgresDbManager</value>
</property>

<!-- atleastonce or atmostonce -->
<property>
          <name>edu.sc.seis.sod.persistencetype</name>
          <value>atleastonce</value>
</property>

<!-- number of days to get events per request to eventFinder -->
<property>
          <name>edu.sc.seis.sod.daystoincrement</name>
          <value>1</value>
</property>

<!-- removes database, both hsql and postgres, if it exists at startup -->
<property>
          <name>edu.sc.seis.sod.database.remove</name>
          <value>false</value>
</property>

<!-- how frequently sod updates its list of events, units are seconds -->
<property> 
          <name>edu.sc.seis.sod.database.eventRefreshInterval</name>
          <value>100000</value>
</property>

<!-- only at startup, if events exist in database, successful or failed, 
whether to try and reprocess. For example if require origin in a 
particular catalog, may need to wait until it exists in server. -->
<property>
          <name>edu.sc.seis.sod.database.reopenEvents</name>
          <value>false</value>
</property>

<!-- The number days sod runs before exiting. The value is specified in number of days relative to the endtime specified for querying events.  -->
<property>
          <name>edu.sc.seis.sod.database.quitTime</name>
          <value>-1</value>
</property>

<!-- go back and reask server for events that may have appeared in server
after this was first run. -->
<property>
          <name>edu.sc.seis.sod.database.getNewEvents</name>
          <value>true</value>
</property>
</properties>
<!--
	   xsi:noNamespaceSchemaLocation='http://www.seis.sc.edu/xschema/sod/sod.xsd'>
-->

<!-- The event arm decides which events are interesting. This is based purely on the event itself, not the relationship to a particular station, etc. -->
     <eventArm>

<!-- The event finder is one way of finding out about events. It is for events that have already been stored in a database somewhere, and so could be considered historical in some sense. The event channel is the other method, and it listens for new events. -->
	   <eventFinder>

<!-- The EventDC will have a name that it is registered under in the naming service. -->
		<name>IRIS_EventDC</name>

<!-- The EventDC will also be registered under a subdirectory according to its reversed DNS. -->
		<dns>edu/iris/dmc</dns>

<!-- We will take events from anywhere -->
		    <boxArea>
			<latitudeRange>
				<min>-90</min>
				<max>90</max>
			</latitudeRange>
			<longitudeRange>
				<min>-180</min>
				<max>180</max>
			</longitudeRange>
		    </boxArea>

<!-- Depths from 0 to 1000 kilometers are ok, -->
		<originDepthRange>
			<unitRange>
				<unit>KILOMETER</unit>
				<min>0</min>
				<max>1000</max>
			</unitRange>
		</originDepthRange>

<!-- Only take events from Apr-June -->
		<eventTimeRange>
		<timeRange>
			<startTime>20021001T00:00:00.001Z</startTime>
			<endTime>20021030T00:00:00.001Z</endTime>
		</timeRange>
		</eventTimeRange>

<!-- mag 6 and bigger -->
                <magnitudeRange>
                        <magType>%</magType>
                        <min>6.0</min>
                        <max>10.0</max>
                </magnitudeRange>


<!-- Only events that have a origin from the FINGER catalog. -->
		<catalog><value>FINGER</value></catalog>
<contributor>NEIC</contributor>
	   </eventFinder>


<!-- Print out a line for each successful event -->
	<printLineEventProcess/>
   
   </eventArm>

   <networkArm>
	<networkFinder>
		<description>Connect to the SCEPP networkDC</description>
		<name>IRIS_NetworkDC</name>
		<dns>edu/iris/dmc</dns>
<!-- recheck channels after some time -->
		<refreshInterval>
			<unit>MINUTE</unit>
			<value>3000</value>
		</refreshInterval>
	</networkFinder>

<!-- only USNSN network -->
	<networkIDOR>
		<networkCode><value>IC</value></networkCode>
	</networkIDOR>

	<networkEffectiveTimeOverlap>
		<description>Make sure the network was up during the time range we are interested in. Somewhat redundant since we are only getting one network.</description>
		<effectiveTimeOverlap>
			<min>20020701T00:00:00.001Z</min>
			<max>20021030T00:00:00.001Z</max>
		</effectiveTimeOverlap>
	</networkEffectiveTimeOverlap>

        <stationEffectiveTimeOverlap>
		<effectiveTimeOverlap>
			<min>20020701T00:00:00.001Z</min>
			<max>20021030T00:00:00.001Z</max>
		</effectiveTimeOverlap>
        </stationEffectiveTimeOverlap>

<!-- only get site 00 or space-space-->
        <siteIDOR>
	<siteCode><value>  </value></siteCode>
	<siteCode><value>00</value></siteCode>
        </siteIDOR>

<!-- Accept any channel with B or L band code -->
	<channelIDOR>
		<bandCode><value>B</value></bandCode>
	</channelIDOR>

        <channelEffectiveTimeOverlap>
		<effectiveTimeOverlap>
			<min>20020701T00:00:00.001Z</min>
			<max>20021030T00:00:00.001Z</max>
		</effectiveTimeOverlap>
        </channelEffectiveTimeOverlap>

	<sampling>
		<min>1</min>
		<max>40</max>
		<interval>
			<unit>SECOND</unit>
			<value>1</value>
		</interval>
	</sampling>

	<printlineChannelProcessor/>
	
    </networkArm>

    <waveFormArm>
	<fixedDataCenter>
		<name>IRIS_BudDataCenter</name>
		<dns>edu/iris/dmc</dns>
	</fixedDataCenter>
	<localSeismogramArm>
	<phaseRequest>
		<beginPhase>ttp</beginPhase>
		<beginOffset>
			<unit>SECOND</unit>
			<value>-60</value>
		</beginOffset>
		<endPhase>tts</endPhase>
		<endOffset>
			<unit>SECOND</unit>
			<value>60</value>
		</endOffset>
	</phaseRequest>

	<availableDataAND>
		<nogaps/>
		<fullCoverage/>
	</availableDataAND>

	<printlineSeismogramProcess/>
	<sacFileProcessor>
		<dataDirectory>GlobalPWave</dataDirectory>
	</sacFileProcessor>

	</localSeismogramArm>
   </waveFormArm>
</sod>
