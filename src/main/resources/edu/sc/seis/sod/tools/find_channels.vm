#if($additionalArms.length() > 0)
$additionalArms#end
    <networkArm>
        <fdsnStation>
#if($server)
            <host>$server</host>
#end
#foreach($code in $networks)
            <networkCode>$code</networkCode>
#end
#foreach($code in $stations)
            <stationCode>$code</stationCode>
#end
#foreach($code in $sites)
            <locationCode>$code</locationCode>
#end
#foreach($code in $channels)
            <channelCode>$code</channelCode>
#end
#if($box)
            <stationBoxArea>
                <latitudeRange>
                    <min>$box.south</min>
                    <max>$box.north</max>
                </latitudeRange>
                <longitudeRange>
                    <min>$box.west</min>
                    <max>$box.east</max>
                </longitudeRange>
            </stationBoxArea>
#end
#if($donut)
            <stationPointDistance>
                <unit>DEGREE</unit>
                <min>$donut.min</min>
                <max>$donut.max</max>
                <latitude>$donut.lat</latitude>
                <longitude>$donut.lon</longitude>
            </stationPointDistance>
#end
#if($includeRestricted)
            <includeRestricted/>
#end
#if($matchTimeseries)
            <matchTimeseries>true</matchTimeseries>
#end
        </fdsnStation>
#if($server)
        <networkFinder>
            <name>$server.name</name>
            <dns>$server.dns</dns>
        </networkFinder>
#end
#if($networks)
        <networkOR>
#foreach($code in $networks)
            <networkCode>$code</networkCode>
#end
        </networkOR>
#else
        <networkNOT>
          <networkOR>
            <!-- exclude SY network as it is synthetic -->
            <networkCode>SY</networkCode>
            <!-- exclude PI network as it is passcal test data -->
            <networkCode>PI</networkCode>
          </networkOR>
        </networkNOT>
#end
#if($needsStationAND)
        <stationAND>
#end
#if($stations)
            <stationOR>
#foreach($code in $stations)
                <stationCode>$code</stationCode>
#end
            </stationOR>
#end
#if($box)
            <stationArea>
                <boxArea>
                    <latitudeRange>
                        <min>$box.south</min>
                        <max>$box.north</max>
                    </latitudeRange>
                    <longitudeRange>
                        <min>$box.west</min>
                        <max>$box.east</max>
                    </longitudeRange>
                </boxArea>
            </stationArea>
#end
#if($donut)
            <stationPointDistance>
                <unit>DEGREE</unit>
                <min>$donut.min</min>
                <max>$donut.max</max>
                <latitude>$donut.lat</latitude>
                <longitude>$donut.lon</longitude>
            </stationPointDistance>
#end
#if($needsEffectiveTimeRange)
            <stationEffectiveTimeOverlap>
                <startTime>
                    $begin
                </startTime>
                <endTime>
                    $end
                </endTime>
            </stationEffectiveTimeOverlap>
#end

#if($needsStationAND)
        </stationAND>
#end
#if($sites)
        <channelOR>
#foreach($code in $sites)
            <siteCode>$code</siteCode>
#end
        </channelOR>
#end
#if($channels)
        <channelOR>
#foreach($code in $channels)
            <channelCode>$code</channelCode>
#end
        </channelOR>
#end
#if($needsEffectiveTimeRange)
            <channelEffectiveTimeOverlap>
                <startTime>
                    $begin
                </startTime>
                <endTime>
                    $end
                </endTime>
            </channelEffectiveTimeOverlap>
#end
#if($output)
        <printlineChannelProcess>
            <template>$output</template>
        </printlineChannelProcess>
#end
    </networkArm>
</sod>
