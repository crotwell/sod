<?xml version="1.0" encoding="UTF-8"?>
<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
    xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xsd="http://http://www.w3.org/2001/XMLSchema">
    <start>
        <ref name="source"/>
    </start>
    <define name="source">
        <choice>
            <xsd:annotation>
                <summary>Defines the source for network/station/channel information.</summary>
                <description>This defines the source for all network information.</description>
                <velocity>#networkArmPage()</velocity>
            </xsd:annotation>
            <ref name="finder"/>
            <ref name="filterFinder"/>
            <ref name="CSVNetworkSource"/>
            <ref name="winstonNetworkSource"/>
        </choice>
    </define>
    <define name="finder">
        <element name="networkFinder">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Finds networks</summary>
                    <description> A Fissures/DHI NetworkDC service is located via the name and dns
                        tags. The NetworkFinder is acquired from the NetworkDC, and a query is sent
                        with the given arguments. The networks returned are then sent through the
                        NetworkArm for processing. An optional refresh interval can be given if sod
                        should periodically check for new channels.  
                        See <a href="http://www.seis.sc.edu/wily/GetAllServers?corbaLoc=corbaloc:iiop:dmc.iris.washington.edu:6371/NameService&amp;description=IRIS nameserver">Wily</a>
                        for a list of active NetworkDCs and their status. </description>
                    <velocity>#networkArmPage()</velocity>
                    <example>
                        <networkFinder>
                            <name>IRIS_NetworkDC</name>
                            <dns>edu/iris/dmc</dns>
                            <refreshInterval>
                                <unit>MINUTE</unit>
                                <value>3000</value>
                            </refreshInterval>
                        </networkFinder>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="name"/>
            <ref name="dns"/>
	    <optional>
	      <element name="retries">
		<xsd:annotation>
		  <summary>Number of consecutive failures before quiting</summary>
		  <description>In the event of server errors, SOD will retry 
		  the query to the server for retries times before failing.
		  The default is -1 which means to try forever.</description>
            </xsd:annotation>
		<data type="integer"/>
	      </element>
	    </optional>
            <optional>
                <externalRef href="../base/externalRef/refreshInterval.rng"/>
            </optional>
        </element>
    </define>
    <define name="filterFinder">
        <element name="filterNetworkFinder">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Finds networks and only allows in stations matching reg exps loaded
                        from a url</summary>
                    <example>
                        <networkFinder>
                            <name>IRIS_NetworkDC</name>
                            <dns>edu/iris/dmc</dns>
                            <refreshInterval>
                                <unit>MINUTE</unit>
                                <value>3000</value>
                            </refreshInterval>
                            <filterURL>http://seis.sc.edu/GEE/Dynamic/GEE_2.1/configs/filterStations.txt</filterURL>
                        </networkFinder>
                    </example>
                </xsd:documentation>
            </xsd:annotation>
            <ref name="name"/>
            <ref name="dns"/>
            <optional>
                <externalRef href="../base/externalRef/refreshInterval.rng"/>
            </optional>
            <element name="filterURL">
                <data type="string"/>
            </element>
        </element>
    </define>
    <define name="CSVNetworkSource">
        <element name="CSVNetworkSource">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Retrieve channels from a Comma-Separated Values file</summary>
                    <description>Channels are stored in a text file where the first line indicates which fields are going
                        to be used in creating the channels for use in the SOD run. Each field, of course, is separated by
                        a comma. From the second line on, each line represents an channel, and the values are filled in
                        the same order as the fields in the first line. For more information on how to use this, <a
                            href="../../csvEvents.html">look here</a>.</description>
                </xsd:documentation>
            </xsd:annotation>
                    <choice>
                        <element name="stationFile">
                            <data type="string"/>
                        </element>
                        <element name="stations">
                            <data type="string">
                                <xsd:annotation>
                                    <example>
net.code, code, start, latitude, longitude, elevation, depth
CO, JSC, 2009-04-13T00:00:00.000Z, 34.2816, -81.2597, 103, 1
CO, CASEE, 2009-04-13T00:00:00.000Z, 34.993, -82.9317, 385, 2
CO, RGR, 2009-04-13T00:00:00.000Z, 32.9074, -80.1939, 10, 51
CO, CSB, 2009-04-13T00:00:00.000Z, 32.987, -80.0715, 6, 76.3
CO, HODGE, 2009-04-13T00:00:00.000Z, 34.2314, -82.2585, 155, 1
CO, BIRD, 2009-04-13T00:00:00.000Z, 34.6449, -80.4614, 132, 1
CO, PAULI, 2009-04-13T00:00:00.000Z, 34.2816, -81.259752, 103, 1
CO, HAW, 2009-04-13T00:00:00.000Z, 33.3600, -81.61, 112, 100

<network code="CO">
    <station code="JSC" lat="34.2816" lon="-81.2597" elevation="103" depth="1">
        <site code="00">
            <channel code="BHZ" samplingPeriod="0.01"/>
        </site>
    </station> 
</network>
                                    </example>
                                </xsd:annotation>
                            </data>
                        </element>
                    </choice>
                    <choice>
                        <element name="channelFile">
                            <data type="string"/>
                        </element>
                        <element name="channels">
                            <data type="string">
                                <xsd:annotation>
                                    <example>
net.code, station.code, site.code, code, sampling.frequency
CO, JSC, 00, BHZ, 100
CO, JSC, 00, BHN, 100
CO, JSC, 00, BHE, 100
CO, CASEE, 00, BHZ, 100
CO, CASEE, 00, BHN, 100
CO, CASEE, 00, BHE, 100
CO, HODGE, 00, BHZ, 100
CO, HODGE, 00, BHN, 100
CO, HODGE, 00, BHE, 100
CO, BIRD, 00, BHZ, 100
CO, BIRD, 00, BHN, 100
CO, BIRD, 00, BHE, 100
CO, PAULI, 00, BHZ, 100
CO, PAULI, 00, BHN, 100
CO, PAULI, 00, BHE, 100
CO, HAW, 00, BHZ, 100
CO, HAW, 00, BHN, 100
CO, HAW, 00, BHE, 100
CO, RGR, 00, EHZ, 100
CO, RGR, 00, EHN, 100
CO, RGR, 00, EHE, 100
CO, CSB, 00, EHZ, 100
CO, CSB, 00, EHN, 100
CO, CSB, 00, EHE, 100
                                    </example>
                                </xsd:annotation>
                            </data>
                        </element>
                    </choice>
        </element>
    </define>
    <define name="winstonNetworkSource">
        <element name="winstonNetworkSource">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Retrieve channels from a Winston wave server, plus stations from Comma-Separated Values file</summary>
                    <description>Channels are stored in a text file where the first line indicates which fields are going
                        to be used in creating the channels for use in the SOD run. Each field, of course, is separated by
                        a comma. From the second line on, each line represents an channel, and the values are filled in
                        the same order as the fields in the first line. For more information on how to use this, <a
                            href="../../csvEvents.html">look here</a>.</description>
                </xsd:documentation>
            </xsd:annotation>
                    <choice>
                        <element name="stationFile">
                            <data type="string"/>
                        </element>
                        <element name="stations">
                            <data type="string">
                                <xsd:annotation>
                                    <example>
net.code, code, start, latitude, longitude, elevation, depth
CO, JSC, 2009-04-13T00:00:00.000Z, 34.2816, -81.2597, 103, 1
CO, CASEE, 2009-04-13T00:00:00.000Z, 34.993, -82.9317, 385, 2
CO, RGR, 2009-04-13T00:00:00.000Z, 32.9074, -80.1939, 10, 51
CO, CSB, 2009-04-13T00:00:00.000Z, 32.987, -80.0715, 6, 76.3
CO, HODGE, 2009-04-13T00:00:00.000Z, 34.2314, -82.2585, 155, 1
CO, BIRD, 2009-04-13T00:00:00.000Z, 34.6449, -80.4614, 132, 1
CO, PAULI, 2009-04-13T00:00:00.000Z, 34.2816, -81.259752, 103, 1
CO, HAW, 2009-04-13T00:00:00.000Z, 33.3600, -81.61, 112, 100

<network code="CO">
    <station code="JSC" lat="34.2816" lon="-81.2597" elevation="103" depth="1">
        <site code="00">
            <channel code="BHZ" samplingPeriod="0.01"/>
        </site>
    </station> 
</network>
                                    </example>
                                </xsd:annotation>
                            </data>
                        </element>
                    </choice>
            <element name="host">
                <data type="string"/>
            </element>
            <optional>
                <element name="port">
                    <data type="integer"/>
                </element>
            </optional>
        </element>
    </define>
    <define name="name">
        <element name="name">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>Name of a network server</summary>
                    <description>The server's name is used in combination with a dns value to find a
                        network DC. The name "IRIS_NetworkDC" must be used in combination with the
                        "edu/iris/dmc" dns value. The name "NCEDC_NetworkDC" must be used in
                        conjunction with the "edu/berkley/geo/quake" dns value. The name
                        "SCEPPNetworkDC" must be used in conjunction with a DNS value
                    "edu/sc/seis".</description>
                </xsd:documentation>
            </xsd:annotation>
            <choice>
                <value>IRIS_NetworkDC</value>
                <value>NCEDC_NetworkDC</value>
                <value>SCEPPNetworkDC</value>
                <data type="string"/>
            </choice>
        </element>
    </define>
    <define name="dns">
        <element name="dns">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                    <summary>DNS location of a network server</summary>
                    <description>The server's dns is used in combination with a name value to find a
                        server from an network DC. The name "IRIS_NetworkDC" must be used in
                        combination with the "edu/iris/dmc" dns value. The name "NCEDC_NetworkDC"
                        must be used in conjunction with the "edu/berkley/geo/quake" dns value. The
                        name "SCEPPNetworkDC" must be used in conjunction with a DNS value
                        "edu/sc/seis"</description>
                </xsd:documentation>
            </xsd:annotation>
            <choice>
                <value>edu/iris/dmc</value>
                <value>edu/berkley/geo/quake</value>
                <value>edu/sc/seis</value>
                <data type="string"/>
            </choice>
        </element>
    </define>
</grammar>
